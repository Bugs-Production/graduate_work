"""add_transaction

Revision ID: 66e2cb6f9f1e
Revises: f2214574000e
Create Date: 2024-11-23 21:40:32.522889

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '66e2cb6f9f1e'
down_revision: Union[str, None] = 'f2214574000e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('success', 'failed', 'pending', 'refunded', name='transaction_status').create(op.get_bind())
    sa.Enum('stripe', 'other', name='payment_type').create(op.get_bind())
    op.create_table('transactions',
    sa.Column('subscription_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.BigInteger(), nullable=False),
    sa.Column('payment_type', postgresql.ENUM('stripe', 'other', name='payment_type', create_type=False), nullable=False),
    sa.Column('status', postgresql.ENUM('success', 'failed', 'pending', 'refunded', name='transaction_status', create_type=False), nullable=False),
    sa.Column('user_card_id', sa.UUID(), nullable=False),
    sa.Column('stripe_payment_intent_id', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_card_id'], ['usercardsstripes.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transactions')
    sa.Enum('stripe', 'other', name='payment_type').drop(op.get_bind())
    sa.Enum('success', 'failed', 'pending', 'refunded', name='transaction_status').drop(op.get_bind())
    # ### end Alembic commands ###
